// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sistemaFilme_API.Data;

namespace sistemaFilme_API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2");

            modelBuilder.Entity("sistemaFilme_API.Models.Ator", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("sobrenome")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("atores");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nome = "Lauro",
                            sobrenome = "Fernão"
                        },
                        new
                        {
                            id = 2,
                            nome = "Roberto",
                            sobrenome = "Gomes"
                        },
                        new
                        {
                            id = 3,
                            nome = "Ronaldo",
                            sobrenome = "Nazario"
                        },
                        new
                        {
                            id = 4,
                            nome = "Rodrigo",
                            sobrenome = "Hubert"
                        },
                        new
                        {
                            id = 5,
                            nome = "Alexandre",
                            sobrenome = "Pires"
                        });
                });

            modelBuilder.Entity("sistemaFilme_API.Models.AtorGenero", b =>
                {
                    b.Property<int>("atorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("generoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("atorId", "generoId");

                    b.HasIndex("generoId");

                    b.ToTable("AtorGenero");
                });

            modelBuilder.Entity("sistemaFilme_API.Models.Filme", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("dataLancamento")
                        .HasColumnType("TEXT");

                    b.Property<string>("diretor")
                        .HasColumnType("TEXT");

                    b.Property<string>("genero")
                        .HasColumnType("TEXT");

                    b.Property<string>("titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("filmes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            dataLancamento = "22/02/2005",
                            diretor = "Cristofer Nolan",
                            genero = "Ficção",
                            titulo = "Vanilla Sky"
                        },
                        new
                        {
                            id = 2,
                            dataLancamento = "22/02/2002",
                            diretor = "Cristofer Nolan",
                            genero = "Drama",
                            titulo = "Batman"
                        },
                        new
                        {
                            id = 3,
                            dataLancamento = "22/02/1999",
                            diretor = " Martin Scorcese",
                            genero = "Ação",
                            titulo = "O Irlandes"
                        },
                        new
                        {
                            id = 4,
                            dataLancamento = "22/02/2001",
                            diretor = "David Linch",
                            genero = "Romance",
                            titulo = "Clube de Luta"
                        },
                        new
                        {
                            id = 5,
                            dataLancamento = "22/02/2019",
                            diretor = "Rodrigo Padilha",
                            genero = "Comédia",
                            titulo = "Magnólia"
                        },
                        new
                        {
                            id = 6,
                            dataLancamento = "22/02/2021",
                            diretor = "Fernando Meirelles",
                            genero = "Fantasia",
                            titulo = "Tropa de Elite"
                        },
                        new
                        {
                            id = 7,
                            dataLancamento = "22/02/2018",
                            diretor = "Stanley Kubric",
                            genero = "Terror",
                            titulo = "2001 Odisseia"
                        });
                });

            modelBuilder.Entity("sistemaFilme_API.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FilmeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId");

                    b.ToTable("Genero");
                });

            modelBuilder.Entity("sistemaFilme_API.Models.AtorGenero", b =>
                {
                    b.HasOne("sistemaFilme_API.Models.Ator", "ator")
                        .WithMany()
                        .HasForeignKey("atorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sistemaFilme_API.Models.Genero", "genero")
                        .WithMany("atoresGeneros")
                        .HasForeignKey("generoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sistemaFilme_API.Models.Genero", b =>
                {
                    b.HasOne("sistemaFilme_API.Models.Filme", "filme")
                        .WithMany()
                        .HasForeignKey("FilmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
